{"version":3,"sources":["components/Firebase/index.js","components/Home/ToDoList/ToDoItem.js","components/Home/ToDoList/AddItem.js","components/Home/ToDoList/index.js","components/Home/index.js","components/Login/index.js","components/SignUp/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseContext","createContext","Firebase","firebase","initializeApp","this","auth","db","firestore","ToDoItem","props","useState","todo","data","completed","checked","setChecked","content","setContent","editEnabled","setEditEnabled","useContext","style","textDecoration","React","useEffect","console","log","collection","doc","currentUser","uid","id","update","catch","err","className","type","onChange","value","readOnly","e","target","onDoubleClick","onBlur","border","onClick","color","delete","AddItem","preventDefault","trim","add","createdAt","Date","toISOString","ToDoList","filter","setFilter","todos","setTodos","error","setError","onSnapshot","snapshot","todosData","forEach","push","sort","b","a","map","key","Home","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","history","useHistory","classes","initialForm","email","password","formData","setFormData","Container","component","maxWidth","CssBaseline","Typography","variant","noValidate","onSubmit","signInWithEmailAndPassword","then","usr","code","message","TextField","required","fullWidth","label","name","autoComplete","autoFocus","Alert","severity","Button","Grid","container","item","Link","RouterLink","to","SignUp","password1","password2","confirmed","setConfirmed","handleChange","copyForm","disabled","Object","entries","createUserWithEmailAndPassword","user","set","PrivateRoute","children","rest","render","location","pathname","state","from","App","basename","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71d77327.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { createContext } from 'react';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n}\n\nconst FirebaseContext = createContext(null);\n\nexport default Firebase;\nexport { Firebase, FirebaseContext };\n","import React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../../Firebase';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ClearIcon from '@material-ui/icons/Clear';\nfunction ToDoItem(props) {\n  const [checked, setChecked] = useState(props.todo.data.completed);\n  const [content, setContent] = useState(props.todo.data.content);\n  const [editEnabled, setEditEnabled] = useState(false);\n\n  const firebase = useContext(FirebaseContext);\n  const style = {\n    textDecoration: 'line-through',\n  };\n  if (!checked) style.textDecoration = '';\n\n  const deleteTodo = () => {\n    firebase.db\n      .collection('users')\n      .doc(firebase.auth.currentUser.uid)\n      .collection('todos')\n      .doc(props.todo.id)\n      .delete();\n  };\n  const updateTodo = () => {\n    console.log('update');\n    firebase.db\n      .collection('users')\n      .doc(firebase.auth.currentUser.uid)\n      .collection('todos')\n      .doc(props.todo.id)\n      .update({ content: content, completed: checked })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // callback after state changed\n  React.useEffect(() => {\n    return updateTodo();\n  }, [checked, content]);\n\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={() => {\n          setChecked(!checked);\n        }}\n      />\n      <input\n        type=\"text\"\n        value={content}\n        style={{ ...style }}\n        readOnly={editEnabled ? '' : true}\n        onChange={(e) => setContent(e.target.value)}\n        onDoubleClick={() => setEditEnabled(true)}\n        onBlur={() => setEditEnabled(false)}\n        style={editEnabled ? { border: '1px solid #333333' } : {}}\n      />\n\n      <div className=\"todo-item-control\">\n        <div onClick={() => setEditEnabled(!editEnabled)}>\n          <CreateIcon color=\"primary\" />\n        </div>\n        <div onClick={deleteTodo}>\n          <ClearIcon color=\"primary\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../../Firebase';\nfunction AddItem(props) {\n  const firebase = useContext(FirebaseContext);\n  const [content, setContent] = useState('');\n  const addNewItem = () => {\n    firebase.db\n      .collection('users')\n      .doc(firebase.auth.currentUser.uid)\n      .collection('todos')\n      .add({\n        content: content,\n        createdAt: new Date().toISOString(),\n        completed: false,\n      });\n  };\n  return (\n    <form className=\"add-item\">\n      <input\n        type=\"text\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n      ></input>\n      <button\n        className=\"add-button\"\n        onClick={(e) => {\n          e.preventDefault();\n          setContent(content.trim());\n          if (content !== '') addNewItem();\n          setContent('');\n        }}\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default AddItem;\n","import React, { useState, useContext } from 'react';\nimport ToDoItem from './ToDoItem';\nimport AddItem from './AddItem';\nimport { FirebaseContext } from '../../Firebase';\nimport './style.css';\nfunction ToDoList() {\n  const firebase = useContext(FirebaseContext);\n  const [filter, setFilter] = useState('all');\n\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState('');\n  React.useEffect(() => {\n    try {\n      const uid = firebase.auth.currentUser.uid;\n      return firebase.db\n        .collection('users')\n        .doc(uid)\n        .collection('todos')\n        .onSnapshot((snapshot) => {\n          const todosData = [];\n          snapshot.forEach((doc) =>\n            todosData.push({ id: doc.id, data: doc.data() })\n          );\n          setTodos(todosData);\n        });\n    } catch (e) {\n      setError('Error fetching user data');\n    }\n  }, [firebase]);\n\n  if (error !== '') return <div>An errorr ocurred</div>;\n  else\n    return (\n      <div className=\"App\">\n        <AddItem />\n        <div className=\"item-categories\">\n          <div\n            className={\n              filter === 'all' ? 'category category-active' : 'category'\n            }\n            onClick={(e) => {\n              setFilter('all');\n            }}\n          >\n            All\n          </div>\n          <div\n            className={\n              filter === 'unfinished' ? 'category category-active' : 'category'\n            }\n            onClick={(e) => setFilter('unfinished')}\n          >\n            Unfinished\n          </div>\n          <div\n            className={\n              filter === 'finished' ? 'category category-active' : 'category'\n            }\n            onClick={(e) => setFilter('finished')}\n          >\n            Finished\n          </div>\n        </div>\n        {todos\n          .sort((b, a) => {\n            a = new Date(a.data.createdAt);\n            b = new Date(b.data.createdAt);\n            return a > b ? -1 : a < b ? 1 : 0;\n          })\n          .map((todo) => {\n            if (\n              (!todo.data.completed && filter !== 'finished') ||\n              (todo.data.completed && filter !== 'unfinished')\n            ) {\n              return <ToDoItem key={todo.id} todo={todo}></ToDoItem>;\n            }\n            return;\n          })}\n      </div>\n    );\n}\n\nexport default ToDoList;\n","import React from 'react';\n\nimport ToDoList from './ToDoList';\n\nconst Home = () => {\n  return (\n    <div>\n      <ToDoList />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { FirebaseContext } from '../Firebase';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const firebase = useContext(FirebaseContext);\n  const history = useHistory();\n  const classes = useStyles();\n  const initialForm = {\n    email: '',\n    password: '',\n  };\n\n  const [formData, setFormData] = useState(initialForm);\n  const [error, setError] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    firebase.auth\n      .signInWithEmailAndPassword(formData.email, formData.password)\n      .then((usr) => {\n        setFormData(initialForm);\n        history.push('/');\n      })\n      .catch((error) => {\n        if (\n          error.code === 'auth/wrong-password' ||\n          error.code === 'auth/user-not-found'\n        )\n          setError('Password is invalid or user does not exist');\n        else setError(error.message);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={formData.email}\n            onChange={(e) =>\n              setFormData({ ...formData, email: e.target.value })\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={formData.password}\n            onChange={(e) =>\n              setFormData({ ...formData, password: e.target.value })\n            }\n          />\n          <Alert\n            severity=\"error\"\n            style={error === '' ? { display: 'none' } : {}}\n          >\n            {error}\n          </Alert>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link component={RouterLink} to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\nimport { FirebaseContext } from '../Firebase';\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const firebase = useContext(FirebaseContext);\n  const initialForm = {\n    name: '',\n    email: '',\n    password1: '',\n    password2: '',\n  };\n  const [formData, setFormData] = useState(initialForm);\n  const [confirmed, setConfirmed] = useState(true);\n  const [error, setError] = useState('');\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    firebase.auth\n      .createUserWithEmailAndPassword(formData.email, formData.password1)\n      .then((usr) => {\n        setFormData(initialForm);\n        console.log(usr);\n        firebase.db\n          .collection('users')\n          .doc(usr.user.uid)\n          .set({ name: formData.name });\n        history.push('/');\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  };\n\n  const handleChange = (e) => {\n    const copyForm = { ...formData };\n    copyForm[e.target.name] = e.target.value;\n    setFormData(copyForm);\n\n    let disabled = false;\n    Object.entries(copyForm).forEach(([key, value]) => {\n      if (value.trim() === '') disabled = true;\n    });\n    if (e.target.name === 'password2') {\n      if (formData.password1 !== e.target.value) {\n        setError('Passwords must match!');\n        disabled = true;\n      } else setError('');\n    }\n    setConfirmed(disabled);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoFocus\n              value={formData.name}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password1\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formData.password1}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password2\"\n              label=\"Password Again\"\n              type=\"password\"\n              id=\"password2\"\n              value={formData.password2}\n              onChange={handleChange}\n            />\n\n            <Alert\n              severity=\"error\"\n              style={error === '' ? { display: 'none' } : {}}\n            >\n              {error}\n            </Alert>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={confirmed}\n            >\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </CssBaseline>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Home from '../Home';\nimport Login from '../Login';\nimport SignUp from '../SignUp';\nimport { FirebaseContext } from '../Firebase';\nconst App = () => {\n  return (\n    <Router basename={'/react-to-do'}>\n      <Switch>\n        <PrivateRoute exact path=\"/\">\n          <Home />\n        </PrivateRoute>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nfunction PrivateRoute({ children, ...rest }) {\n  const firebase = useContext(FirebaseContext);\n  try {\n    const x = firebase.auth.currentUser.uid;\n    return <Route {...rest} render={({ location }) => children} />;\n  } catch (err) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) => (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}